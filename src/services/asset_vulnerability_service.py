from typing import Iterable

from boto3.dynamodb.conditions import Key

from src.models.asset_vulnerability_model import AssetVulnerabilityModel
from src.services.database_service import DatabaseService, PRIMARY_KEY, SORT_KEY


class AssetVulnerabilityService:
    def __init__(self):
        self.database_service = DatabaseService()

    def get_asset_vulnerabilities(self,
                                  group_name: str,
                                  status: int = 0,
                                  asset: str = None,
                                  ) -> Iterable:
        expression = Key(PRIMARY_KEY).eq(AssetVulnerabilityModel.generate_pk(group_name, status))

        if asset:
            expression &= Key(SORT_KEY).begins_with(AssetVulnerabilityModel.generate_asset_sk(asset))

        asset_vulnerabilities = self.database_service.query(expression)
        return list(map(lambda av: AssetVulnerabilityModel.from_item(av), asset_vulnerabilities))
